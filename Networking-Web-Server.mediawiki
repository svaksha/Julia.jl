Networking, Events frameworks and other Web related things go here:

== API ==
* A Julia package to estimate the [https://github.com/johnmyleswhite/GeoIP.jl geographic location of IP addresses].


= Cloud =
* [https://github.com/amitmurthy/AWS.jl AWS.jl] supports the EC2 and S3 API's, letting you start / stop EC2 instances dynamically.


=== Documentation ===
* [http://docs.julialang.org/en/latest/stdlib/base/#parallel-computing How to use AWS EC2 machines via addprocs].
* [http://blog.leahhanson.us/using-tcp-sockets-in-julia.html TCP Sockets documentation for webstack.jl]


== Parallel Computing ==
* [https://github.com/amitmurthy/PTools.jl A collection of utilities for parallel computation in Julia].


== GeSHI ==
* [https://github.com/JuliaLang/julia/blob/master/contrib/julia-mode.el#L79-L108 List of Julia keywords] and [https://github.com/JuliaLang/julia/commit/71c0aa3e5660258af5c042058d5d8d3b82d93efb here].
* [https://github.com/john9631/JuliaDocs/blob/master/julia.php Julia language file for GeSHI].


== HTTP ==
* [https://github.com/hackerschool/HttpParser.jl Julia wrapper for Joyent's http-parser].
* SimJulia.jl: https://github.com/BenLauwens/SimJulia.jl is a combined continuous time / discrete event process oriented simulation framework] written in Julia inspired by the Simula library DISCO and the Python library SimPy.
* A package to [https://github.com/randyzwitch/UAParser.jl parse user-agent strings] in Julia, a Julia port of a multi-language port of a parser created by Browserscope, of which a YAML file has been provided under Apache License V2.0. To install, use Pkg.clone("https://github.com/randyzwitch/UAParser.jl"), as the package is yet to be a part of the Julia package repository in METADATA.jl.
* URIParser.jl: is a [https://github.com/loladiro/URIParser.jl URI parser] implemented in Julia.
* WWWClient.jl: is a [https://github.com/loladiro/WWWClient.jl  HTTP client] written in julia (depends on joyent/http-parser) for HTTP parsing. 
* ZMQ.jl: [https://github.com/JuliaLang/ZMQ.jl Julia interface to ZeroMQ]
* Thin Julia [https://github.com/amitmurthy/LibCURL.jl wrapper of libCURL].

== Networking ==
* [https://github.com/loladiro/GnuTLS.jl Transport Level Security for Julia Streams provided by GnuTLS].
* [https://github.com/kmsquire/Logging.jl Logging] module.
* [https://github.com/pchronz/juliaflow JuliaFlow] is a controller for software-defined networking (SDN) that implements the OpenFlow Controller Specification 1.0.0. 

== Julia Webstack ==
* The [http://juliawebstack.org/ Julia Webstack] is a family of modules for building web services in the Julia language.

== Javascript UI/UX ==
* GoogleCharts.jl: [https://github.com/jverzani/GoogleCharts.jl Julia interface to Google Chart Tools]
* Mustache.jl: [https://github.com/jverzani/Mustache.jl Port of mustache.js to julia]

